/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* left;
    Node* right;
    Node* next;

    Node() : val(0), left(NULL), right(NULL), next(NULL) {}

    Node(int _val) : val(_val), left(NULL), right(NULL), next(NULL) {}

    Node(int _val, Node* _left, Node* _right, Node* _next)
        : val(_val), left(_left), right(_right), next(_next) {}
};
*/

class Solution {
public:
  vector<vector<Node*>> res;
    void level(Node* temp,int depth)
    {
        if(!temp) return;
        if(depth==res.size())
            res.push_back(vector<Node*> ());
        res[depth].push_back(temp);
        level(temp->left,depth+1);
        level(temp->right,depth+1);
    }
 
    Node* connect(Node* root) 
    {
        level(root,0);   
        for(int i=1;i<res.size();i++)
            for(int j=0;j<res[i].size()-1;j++)
                res[i][j]->next=res[i][j+1];
        return root;
    }
};
