class MyStack {
public:
  
    queue<int> q1,q2;
    /** Push element x onto stack. */
    void push(int x) {
        q1.push(x);
    }
    
    /** Removes the element on top of the stack and returns that element. */
    int pop() {
        int ans;
        while(!q1.empty())
        {
            ans=q1.front();
            q1.pop();
            if(!q1.empty())
            q2.push(ans);
        }
        while(!q2.empty())
        {
            int temp=q2.front();
            q2.pop();
            q1.push(temp);
        }
        return ans;
        
    }
    
    /** Get the top element. */
    int top() {
         int ans;
        while(!q1.empty())
        {
            ans=q1.front();
            q1.pop();
            q2.push(ans);
        }
        while(!q2.empty())
        {
            int temp=q2.front();
            q2.pop();
            q1.push(temp);
        }
        return ans;
        
    }
    
    /** Returns whether the stack is empty. */
    bool empty() {
        return q1.empty();
        
    }
};

/**
 * Your MyStack object will be instantiated and called as such:
 * MyStack* obj = new MyStack();
 * obj->push(x);
 * int param_2 = obj->pop();
 * int param_3 = obj->top();
 * bool param_4 = obj->empty();
 */
