/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool ans(TreeNode* root,int targetSum)
    {
        if(!root) return false;
         if(!root->left&&!root->right)
        {
            if(targetSum==root->val)
                return true;
            else
                return false;
        }
        else
        {
        bool left=ans(root->left,targetSum-root->val);
        bool right=ans(root->right,targetSum-root->val);
        return left||right;
        }
    }
   
    bool hasPathSum(TreeNode* root1, int targetSum1) 
    {
        if(!root1) return false;
        return ans(root1,targetSum1);
    }
};
