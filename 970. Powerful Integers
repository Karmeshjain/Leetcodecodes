class Solution {
public:
    int logatobaseb(int a, int b)
{
        
        if(b==1) return 0;
    return log(a) / log(b);
}
 
    vector<int> powerfulIntegers(int x, int y, int bound) 
    {
    
        unordered_set <int> mainres;
        if(bound==0||bound==1) return  vector<int>(mainres.begin(), mainres.end());
        int y1=logatobaseb(bound,y);
        int x1=logatobaseb(bound,x);
        int res=0;
        for(int i=0;i<=x1;i++)
        {
            for(int j=0;j<=y1;j++)
            {
                res=pow(x,i)+pow(y,j);
                if(res<=bound)
                    mainres.insert(res);
                 if (y == 1) {
                    break;
                }
            }
            if (x == 1) {
                break;
            }
        }
     return vector<int>(mainres.begin(), mainres.end());
    }
};
