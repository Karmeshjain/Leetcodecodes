class Solution {
public:
static bool cmp(pair<int, int>& a, pair<int, int>& b)
{
    return a.first < b.first;
}
    vector<int> sortJumbled(vector<int>& mapping, vector<int>& nums) 
    {
        unordered_map<int,int> mp;
        for(int i=0;i<mapping.size();i++)
        {
            mp[i]=mapping[i];
        }
        vector<pair<int,int>> vp;
        for(int j=0;j<nums.size();j++)
        {
            string temp=to_string(nums[j]);
            int mnumb=0;
            for(int i=0;i<temp.size();i++)
            {
                int x=(temp[i]-'0');
                mnumb=mnumb*10+mp[x];
            }
            vp.push_back({mnumb,nums[j]});
            cout<<mnumb<<endl;
        }
        
         sort(vp.begin(),vp.end(),cmp);
        vector<int> res;
        for(auto i:vp)
        {
            res.push_back(i.second);
        }
        return res;
    }
};
