/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool flag=true;
    int hieght(TreeNode* temp,int h)
    {
        if(!temp) return h;
        int left=hieght(temp->left,h+1);
        int right=hieght(temp->right,h+1);
         if(abs(left-right)!=1&&abs(left-right)!=0)
                flag=false;
             return max(left,right);
    }
    bool isBalanced(TreeNode* root) 
    {
        if(!root) return true;
        if(!root->left&&!root->right) return true;
        int left=hieght(root->left,0);
        int right=hieght(root->right,0);
         if(abs(left-right)!=1&&abs(left-right)!=0)
                flag=false;
        return flag;
        
    }
};
